// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entrepreneur Entrepreneur?
}

model Entrepreneur {
  id        String   @id @default(uuid())
  userId    String   @unique
  menu      Menu[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User      @relation(fields: [userId], references: [id])
  Product Product[]
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id             String       @id @default(uuid())
  status         String
  totalAmount    Float
  entrepreneur   Entrepreneur @relation(fields: [entrepreneurId], references: [id])
  entrepreneurId String
  customer       Customer     @relation(fields: [customerId], references: [id])
  customerId     String
  orderItems     OrderItem[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Product {
  id             String       @id @default(uuid())
  name           String
  description    String?
  price          Float
  available      Boolean      @default(true)
  entrepreneur   Entrepreneur @relation(fields: [entrepreneurId], references: [id])
  entrepreneurId String
  orderItems     OrderItem[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  menu Menu[]
}

model Menu {
  id             String       @id @default(uuid())
  name           String
  entrepreneur   Entrepreneur @relation(fields: [entrepreneurId], references: [id])
  entrepreneurId String
  products       Product[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

enum UserRole {
  ADMIN
  ENTREPRENEUR
  CUSTOMER
}
